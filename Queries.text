1.Find all the information about each products?

db.product.find();
##############################----------------------------------------------################################
2.Find the product price which are between 400 to 800?

db.product.find({product_price: {$gte: 400, $lte: 800}}).sort({price:1});
##############################----------------------------------------------################################
3.Find the product price which are not between 400 to 600?

db.product.find({$and:[{$or:[{product_price:{$lt :400}},{product_price:{$gt :600}}]}]}).sort({product_price:-1});
##############################----------------------------------------------################################
4.List the four product which are grater than 500 in price ?

db.product.find({product_price: {$gte: 500}}).limit(4);
##############################----------------------------------------------################################
5.Find the product name and product material of each products?

db.product.find( { }, { product_name: 1, product_material: 1 } );
##############################----------------------------------------------################################
6.Find the product with a row id of 10?

db.product.find( {"id":"10"} );
##############################----------------------------------------------################################
7.Find only the product name and product material?

db.product.find( { }, { product_name: 1, product_material: 1 } );
##############################----------------------------------------------################################
8.Find all products which contain the value of soft in product material ?

db.product.aggregate([{$match:{product_material:"Soft"}}]);
##############################----------------------------------------------################################
9.Find products which contain product color indigo  and product price 492.00?
##############################----------------------------------------------################################
db.product.find({$and:[{$or:[{product_price:{$eq :492}},{product_color:"indigo"}]}]}).sort({product_price:-1});

(or)

db.product.find({$or:[{product_price:492},{product_color:"indigo"}]});

10.Delete the products which product price value are same?

db.product.aggregate([
 {
     "$group": {
         _id: {product_price: "$product_price"},
         dups: { $addToSet: "$_id" } ,
         count: { $sum : 1 }
     }
 },
 {
     "$match": {
         count: { "$gt": 1 }
     }
 }
]).forEach(function(doc) {
   doc.dups.shift();
   db.product.deleteMany({
       _id: {$in: doc.dups}
   });
});


##############################----------------------------------------------################################